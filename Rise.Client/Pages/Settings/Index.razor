@page "/settings"
@attribute [Authorize(Roles = "Administrator")]

@using System.Globalization


<MudContainer Style="background-color:Color.Background; color:Color.TextPrimary;">
      <MudPaper Class="p-4 shadow-none" Style="background-color:Color.Surface; color:Color.TextPrimary;">
        <MudGrid>
            <MudItem xs="12" Class="d-flex flex-column flex-md-row justify-space-between align-center pb-4">
                <MudText Typo="Typo.h5" Class="mb-2 mb-md-0 text-center text-md-left">Geblokeerde tijdsloten</MudText>
                <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined" Class="d-flex justify-center">
                    <MudButton OnClick="@(() => ChangeView(ViewType.List))"
                        Variant="@(_currentView == ViewType.List ? Variant.Filled : Variant.Outlined)">
                        <MudIcon Icon="@Icons.Material.Filled.List" Class="mr-2" />Lijst
                    </MudButton>
                    <MudButton  OnClick="@(() => ChangeView(ViewType.Calendar))"
                        Variant="@(_currentView == ViewType.Calendar ? Variant.Filled : Variant.Outlined)">
                        <MudIcon Icon="@Icons.Material.Filled.CalendarMonth" Class="mr-2" />Kalender
                    </MudButton>
                </MudButtonGroup>
            </MudItem>
        </MudGrid>

        @if (_isLoading)
        {
            <div class="d-flex justify-content-center">
                <MudProgressCircular Color="Color.Default" Indeterminate="true" class="mt-3" />
            </div>
        }
        else
        if (_currentView == ViewType.List)
        {
            <MudTable Items="_timeSlots" Hover="true" Dense="true" CurrentPage="@currentPage" class="shadow-none"FixedHeader="true" Height="400px">
                <HeaderContent>
                    <MudTh>Datum</MudTh>
                    <MudTh>Tijdslot</MudTh>
                    <MudTh>Reden</MudTh>

                    <MudTh>Acties</MudTh>
                </HeaderContent>
                <RowTemplate>
                    @{
                        var culture = new CultureInfo(_culturInfo);
                        var formattedDate = context.Date.ToString("dddd dd/MM/yyyy", culture);
                        var timeSlotFormatted = FormatTimeSlot(context.TimeSlot);
                        var isFutureDate = context.Date >= DateTime.Now;
                        var capitalizedDate = char.ToUpper(formattedDate[0]) + formattedDate.Substring(1);
                    }
                    <MudTd>@capitalizedDate</MudTd>
                    <MudTd>@timeSlotFormatted</MudTd>
                    <MudTd>@context.Reason</MudTd>

                    <MudTd>
                        @if (isFutureDate)
                        {
                            <MudButton Color="Color.Error" Variant="Variant.Outlined" Class="ml-2"
                                OnClick="@(() => DeleteTimeSlot(context))">
                                deblokkeer
                            </MudButton>
                        }
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager PageSizeOptions="_pageSizeOptions"
                        RowsPerPageString="Geblokkeerde tijdsloten per pagina:" />
                </PagerContent>
            </MudTable>
            @* <MudButton Color="Color.Primary" Class="mt-2" Style="padding: 10px 20px; font-size: 16px; font-weight: 600;">
                Maak een nieuw tijdslot aan
            </MudButton> *@
        }
        else
        {
            <MudGrid>
                <MudItem xs="12" md="4">
                    <style>
                        .fully-blocked {
                            opacity: 0.5;
                            background-color: var(--mud-palette-error) !important;

                        }

                        .partially-blocked {
                            opacity: 0.4;
                            background-color: var(--mud-palette-error-hover) !important;

                        }
                    </style>
                    <MudPaper Class="pa-4 shadow-none">
                        <MudDatePicker DateFormat="dd/MM/yyyy" ShowToolbar="false" PickerVariant="PickerVariant.Static"
                            Required="true" Label="Only Calendar" DateChanged="@OnDateChanged"
                            AdditionalDateClassesFunc="@GetDateClass" MinDate="@_minDate"
                MaxDate="@_maxDate" />
                    </MudPaper>
                </MudItem>
                <MudItem xs="12" md="8">
                    <MudPaper Class="pa-4 shadow-none">
                        @if (Date != default)
                        {
                            <MudText Typo="Typo.h6" Class="mb-4">
                                Tijdsloten voor @Date?.ToString("dddd dd/MM/yyyy", new CultureInfo("nl-BE"))
                            </MudText>

                            <MudGrid>
                                <MudItem xs="12" Class="mb-4">
                                    @{

                                        var blockedSlotsCount = _timeSlots.Count(t =>
                                        t.Date.Date == Date?.Date &&
                                        _availableSlots.Contains(t.TimeSlot));
                                        var allSlotsBlocked = blockedSlotsCount == _availableSlots.Length;
                                    }

                                    <MudButton Color="@(allSlotsBlocked ? Color.Error : Color.Primary)" Variant="Variant.Filled"
                                        OnClick="@(() => HandleBlockDay(_availableSlots))"
                                        StartIcon="@(allSlotsBlocked ? Icons.Material.Filled.LockOpen : Icons.Material.Filled.Lock)">
                                        @(allSlotsBlocked ? "Deblokkeer Dag" : "Blokkeer Dag")
                                    </MudButton>
                                </MudItem>

                                @foreach (var hour in _availableSlots)
                                {
                                    var slot = _timeSlots.FirstOrDefault(t =>
                                    t.Date.Date == Date?.Date &&
                                    t.TimeSlot == hour);
                                   var (hasBookings, bookingCount) = Date.HasValue ? GetBookingsForTimeSlot(Date.Value, hour) : (false, 0);
var background = slot == null ? "var(--mud-palette-surface)" : "var(--mud-palette-error-hover)";
var borderColor = slot == null ? "mud-border-primary" : "mud-border-error";
var currentHour = hour;

<MudItem xs="12" sm="6" md="4">
    <MudPaper Elevation="2" Class="@($"pa-3 d-flex flex-column h-100 shadow-none border-solid border-1 {borderColor}")" Style="@($"background-color: {background}")">
        <div class="d-flex flex-column justify-space-between" style="height: 100%">
            <div>
                <div class="d-flex justify-space-between align-center">
                    <MudText Typo="Typo.subtitle1">@FormatTimeSlot(currentHour)</MudText>
                    @if (hasBookings)
                    {
                        <MudText class="border px-2 py-1 rounded text-sm" Color="Color.Error" Size="Size.Small">
                            @bookingCount @(bookingCount == 1 ? "boeking" : "boekingen")
                        </MudText>
                    }
                </div>
                @if (slot != null)
                {
                    <MudText Typo="Typo.body2" Class="mt-1">
                        <strong>Reden:</strong><br>
                        <div class="overflow-auto" style="max-height: 80px">
                            @slot.Reason
                        </div>
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Class="mt-1 mud-text-secondary">
                        Geen blokkering<br>
                    </MudText>
                }
            </div>
            
            <div class="mt-auto pt-2">
                @if (slot != null)
                {
                    <MudButton Size="Size.Small" Color="Color.Error" Variant="Variant.Filled"
                        OnClick="@(() => DeleteTimeSlot(slot))">
                        Verwijder
                    </MudButton>
                }
                else
                {
                    <MudButton Size="Size.Small" Color="Color.Primary" Variant="Variant.Outlined"
                        OnClick="@(() => CreateTimeSlotForHour(currentHour))">
                        Blokkeer
                    </MudButton>
                }
            </div>
        </div>
    </MudPaper>
</MudItem>
                                }
                            </MudGrid>
                        }
                        else
                        {
                            <MudAlert Severity="Severity.Info">
                                Selecteer een datum om de tijdsloten te bekijken.
                            </MudAlert>
                        }
                    </MudPaper>
                </MudItem>
            </MudGrid>
        }

    </MudPaper>

    <MudPaper Class="p-4 shadow-none mt-4" Style="background-color:Color.Surface; color:Color.TextPrimary;">

            <MudItem xs="12" Class="d-flex justify-space-between align-center pb-4">
                <MudText Typo="Typo.h5">Prijs aanpassen</MudText>
            </MudItem>
            <MudItem>
                <MudText Typo="Typo.body1"><strong>Huidige prijs: </strong> â‚¬@_price</MudText>
            </MudItem>
            <MudItem>
                <EditForm Model="@_model" OnValidSubmit="OnValidSubmitNewPrice">
                <DataAnnotationsValidator />
                <MudNumericField id="newPrice" Label="Nieuwe prijs" @bind-Value="_model.Amount"
                                For="@(() => _model.Amount)" Min="0.0m"  HideSpinButtons="true" Style="max-width: 200px;" class="mt-3"/>
                <MudButton id="submit-button" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary"
                        Class="ml-auto mt-3">
                        Opslaan</MudButton>
            </EditForm>
            </MudItem>
   
    </MudPaper>
</MudContainer>
