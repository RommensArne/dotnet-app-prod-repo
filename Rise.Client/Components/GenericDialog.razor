@inherits ComponentBase
@inject IDialogService DialogService

<MudDialog>
    <TitleContent>
        @Title
    </TitleContent>
    <DialogContent>
        <MudText Typo="Typo.body1" Align="Align.Center">@Message</MudText>

        @if (HasAdditionalMessage)
        {
            <br />
            <MudText Style="font-weight: 600;" Typo="Typo.body1" Align="Align.Center">@AdditionalMessage</MudText>
        }


        @if (IncludeReasonInput)
        {
            <MudTextField @bind-Value="_reason" Label="Reden" Variant="Variant.Outlined" Class="mt-3" />
        }
    </DialogContent>


    <DialogActions>
        @if (ShowCancelButton)
        {
            <MudButton OnClick="@OnCancel" Color="Color.Secondary">@CancelText</MudButton>
        }
        <MudButton OnClick="@OnConfirm" Color="Color.Primary">@ConfirmText</MudButton>
    </DialogActions>
</MudDialog>

@code {





    [CascadingParameter] private MudDialogInstance MudDialog { get; set; } = default!;


    [Parameter] public string Title { get; set; } = "Confirmation";

    [Parameter] public string Message { get; set; } = "Are you sure you want to proceed?";

    [Parameter] public string? AdditionalMessage { get; set; }

    [Parameter] public bool HasAdditionalMessage { get; set; } = false;

    [Parameter] public string ConfirmText { get; set; } = "Ok";

    [Parameter] public string CancelText { get; set; } = "Cancel";

    [Parameter] public bool ShowCancelButton { get; set; } = true;
    [Parameter] public bool IncludeReasonInput { get; set; }
    [Parameter] public Action<string>? OnReasonChanged { get; set; }

    private string _reason = "Geblokkeerd";

    [Parameter] public EventCallback OnConfirmAction { get; set; }

    [Parameter] public EventCallback OnCancelAction { get; set; }

    private async Task OnConfirm()
    {
        if (OnReasonChanged != null)
        {
            OnReasonChanged.Invoke(_reason);
        }
        await OnConfirmAction.InvokeAsync();
        MudDialog.Close(DialogResult.Ok(true));
    }

    private async Task OnCancel()
    {
        if (OnCancelAction.HasDelegate)
        {
            await OnCancelAction.InvokeAsync();
        }
        MudDialog.Cancel();
    }
}
